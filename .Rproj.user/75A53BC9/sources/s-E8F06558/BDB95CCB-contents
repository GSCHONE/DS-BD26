don=readRDS("don.RDS")
library(rpart)
library(randomForest)
#######################################
##cr√©ation de blocs
nb <- 10
iter <- 100
RESrepete <- matrix(NA,nrow=iter,ncol=5)
for(jj in 1:iter){
  print(jj)
  set.seed(1233+jj)
  blocs <- sample(rep(1:nb,length=nrow(don)))
  RES <- data.frame(Y=don$Y)
  for(ii in 1:nb){
  ### DECOUPAGE
  donA <- don[blocs!=ii,]
  donT <- don[blocs==ii,]
  #######################
  ## Algo 1 reg MCO
  ########################
  tmp <- lm(Y~.,data=donA)
  RES[blocs==ii,"mco"] <- predict(tmp,donT)
  #######################
  ## Algo  STEP AIC MCO
  ########################
  tmp <- lm(Y~.,data=donA)
  modAIC <- step(tmp,trace=0)
  RES[blocs==ii,"AIC"] <- predict(modAIC,donT)
  #######################
  ## Algo  STEP BIC MCO
  ########################
  tmp <- lm(Y~.,data=donA)
  modBIC <- step(tmp,trace=0,k=log(nrow(donA)))
  RES[blocs==ii,"BIC"] <- predict(modBIC,donT)
  #######################
  ## Algo  arbre
  ########################
    tmp <- rpart(Y~.,data=donA)
    RES[blocs==ii,"arbre"] <- predict(tmp,donT)
    #######################
    ## Algo  foret
    ########################
    tmp <- randomForest(Y~.,data=donA)
    RES[blocs==ii,"foret"] <- predict(tmp,donT)
  }
  print(RESrepete)
RESrepete[jj,] <- apply(RES,2,erreur,Y=RES$Y)[-1]
}

